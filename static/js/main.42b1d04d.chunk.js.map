{"version":3,"sources":["Cursor.js","getRandomGithubFile.js","TypingCode.js","App.js","index.js"],"names":["Cursor","className","Component","USER","getBranches","respository","a","owner","login","repo","name","axios","get","response","data","getFiles","tree","filter","element","type","getRepositories","repositories","repository","fork","getTree","sha","pickRandom","elements","Math","floor","length","random","branch","commit","file","path","then","raw","content","JSON","stringify","url","TypingCode","props","fetchCode","bind","doneTyping","startTyping","state","remaining","typed","this","window","setTimeout","getRandomGithubFile","setState","href","target","ref","container","last","requestAnimationFrame","step","now","seconds","isDoneTyping","next","substring","endsWith","scrollTop","scrollHeight","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.42b1d04d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Cursor extends Component {\r\n  render () {\r\n    return <span className='Cursor'>|</span>\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nconst USER = 'davidchristie'\r\n\r\nasync function getBranches (respository) {\r\n  const owner = respository.owner.login\r\n  const repo = respository.name\r\n  const response = await axios.get(\r\n    `https://api.github.com/repos/${owner}/${repo}/branches`\r\n  )\r\n  return response.data\r\n}\r\n\r\nfunction getFiles (tree) {\r\n  return tree.filter(element => element.type === 'blob')\r\n}\r\n\r\nasync function getRepositories () {\r\n  const response = await axios.get(`https://api.github.com/users/${USER}/repos`)\r\n  const repositories = response.data\r\n  return repositories.filter(repository => !repository.fork)\r\n}\r\n\r\nasync function getTree (owner, repo, sha) {\r\n  const response = await axios.get(\r\n    `https://api.github.com/repos/${owner}/${repo}/git/trees/${sha}?recursive=1`\r\n  )\r\n  return response.data.tree\r\n}\r\n\r\nfunction pickRandom (elements) {\r\n  return elements[Math.floor(elements.length * Math.random())]\r\n}\r\n\r\nexport default async function getRandomGithubFile () {\r\n  const owner = USER\r\n  const repository = pickRandom(await getRepositories())\r\n  const repo = repository.name\r\n  let branch = null\r\n  while (!branch) {\r\n    branch = pickRandom(await getBranches(repository))\r\n  }\r\n  const sha = branch.commit.sha\r\n  const tree = await getTree(owner, repo, sha)\r\n  const file = pickRandom(getFiles(tree))\r\n  const { path } = file\r\n  const raw = await axios.get(\r\n    `https://rawcdn.githack.com/${owner}/${repo}/${branch.name}/${path}`\r\n  )\r\n    .then(response => response.data)\r\n  return {\r\n    content: typeof raw === 'string'\r\n      ? raw\r\n      : JSON.stringify(raw, null, 2),\r\n    path,\r\n    url: `https://github.com/${owner}/${repo}/blob/${branch.name}/${path}`\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport Cursor from './Cursor'\r\nimport getRandomGithubFile from './getRandomGithubFile'\r\nimport './TypingCode.css'\r\n\r\nexport default class TypingCode extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.fetchCode = this.fetchCode.bind(this)\r\n    this.doneTyping = this.doneTyping.bind(this)\r\n    this.startTyping = this.startTyping.bind(this)\r\n    this.state = {\r\n      path: 'Untitled-1',\r\n      remaining: '',\r\n      repository: '',\r\n      typed: '',\r\n      url: null\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.fetchCode()\r\n  }\r\n\r\n  doneTyping () {\r\n    window.setTimeout(this.fetchCode, 3000)\r\n  }\r\n\r\n  fetchCode () {\r\n    getRandomGithubFile()\r\n      .then(file => {\r\n        this.setState({\r\n          path: file.path,\r\n          remaining: file.content,\r\n          repository: file.repository,\r\n          typed: '',\r\n          url: file.url\r\n        })\r\n      })\r\n      .then(this.startTyping)\r\n  }\r\n\r\n  isDoneTyping () {\r\n    return this.state.remaining.length === 0\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className='TypingCode'>\r\n        <h1>\r\n          <a\r\n            className='TypingCode-path'\r\n            href={this.state.url}\r\n            target='_blank'\r\n          >\r\n            <code>\r\n              {this.state.path}\r\n            </code>\r\n          </a>\r\n        </h1>\r\n        <pre\r\n          className='TypingCode-content'\r\n          ref={element => {\r\n            this.container = element\r\n          }}\r\n        >\r\n          <code>\r\n            {this.state.typed}<Cursor />\r\n          </code>\r\n        </pre>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  startTyping () {\r\n    let last = null\r\n    const step = now => {\r\n      if (!last) last = now\r\n      const seconds = (now - last) / 1000\r\n      last = now\r\n      if (Math.random() < 10 * seconds) {\r\n        this.type()\r\n      }\r\n      if (this.isDoneTyping()) {\r\n        this.doneTyping()\r\n      } else {\r\n        window.requestAnimationFrame(step)\r\n      }\r\n    }\r\n    window.requestAnimationFrame(step)\r\n  }\r\n\r\n  type () {\r\n    const next = this.state.remaining[0]\r\n    this.setState({\r\n      remaining: this.state.remaining.substring(1),\r\n      typed: this.state.typed + next\r\n    })\r\n    if (this.state.typed.endsWith('\\n')) {\r\n      this.container.scrollTop = this.container.scrollHeight\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport './App.css'\r\nimport TypingCode from './TypingCode'\r\n\r\nexport default class App extends Component {\r\n  render () {\r\n    return (\r\n      <div className='App'>\r\n        <TypingCode />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nrender(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}